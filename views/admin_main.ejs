<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Page</title>
  <link rel="stylesheet" href="./Styles/admin.css" />

  <style>
    body {
      font-family: 'Montserrat', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      background: linear-gradient(to right, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url('https://media.istockphoto.com/id/469551258/photo/silhouettes-of-hockey-fans-at-a-hockey-game.jpg?s=612x612&w=0&k=20&c=TqHldoOIM3voP38T2qUup0CR0ncQDlgPlr4GHy1pv9E=');
      min-height: 100vh;
      box-sizing: border-box;
      position: relative;
      background-size: cover;
      background-position: center;
    }

    .nav {
      background-color: rgba(51, 51, 51, 0.8);
      color: #fff;
      padding: 15px;
      display: flex;
      justify-content: space-between;
      width: 100%;
      box-sizing: border-box;
      position: relative;
      z-index: 1;
    }

    .logo {
      font-size: 1.5em;
      font-weight: bold;
      text-decoration: none;
      color: #fff;
    }

    .elements {
      display: flex;
      gap: 20px;
    }

    .elements a {
      color: #fff;
      text-decoration: none;
      padding: 10px 20px;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    .elements a:hover {
      background-color: rgba(85, 85, 85, 0.8);
    }

    .section {
      text-align: center;
      color: #333;
      margin: 20px;
      position: relative;
      z-index: 1;
    }

    .sports-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }

    .sport-card {
      background: rgba(255, 255, 255, 0.3);
      border-radius: 15px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
      margin: 20px;
      overflow: hidden;
      height: 280px;
      padding:5px;
      transition: transform 0.3s ease-in-out;
      width: 250px;
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
    }

    .sport-card:hover {
      transform: scale(1.05);
    }

    .sport-card img {
      border-radius: 15px;
      object-fit: cover;
      height: 100%;
      width: 100%;
      transition: filter 0.3s ease-in-out;
    }

    .sport-card img:hover {
      filter: brightness(80%);
    }

    .delete-button {
      background-color: rgba(255, 0, 0, 0.8);
      color: white;
      border: none;
      border-radius: 5px;
      padding: 5px 10px;
      cursor: pointer;
      margin-top: 10px;
    }

    .delete-button:hover {
      background-color: rgba(255, 0, 0, 1);
    }
  </style>
</head>

<body>
  <div class="nav">
    <a href="/home" class="logo">Admin Page</a>
    <div class="elements">
      <a href="/admin_main">Home</a>
      <a href="/records">Schedules</a>
      <a href="/events">Events</a>
      <a href="/my_events">My events</a>
      <a href="/add_sport">Add Sport</a>
      <a href="/logout">Logout</a>
    </div>
  </div>

  <div class="section">
    <h2>Available Sports</h2>
    <div class="sports-container" id="sportsContainer"></div>
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
  </div>

  <script>
    let sports = [];

    function displaySports() {
      const sportsContainer = document.getElementById("sportsContainer");
      sportsContainer.innerHTML = "";

      sports.forEach((sport, index) => {
        const sportCard = document.createElement("div");
        sportCard.classList.add("sport-card");
        sportCard.innerHTML = `
          <h3>${sport.name}</h3>
          <img src="${sport.image_url}" alt="${sport.name}">
          <button class="delete-button" onclick="deleteSport(${index})">Delete</button>
        `;

        sportsContainer.appendChild(sportCard);

        // Add line breaks to create rows of four sports
        if ((index + 1) % 4 === 0) {
          sportsContainer.appendChild(document.createElement('br'));
        }
      });
    }

    function deleteSport(index) {
      const sportToDelete = sports[index];

      // Fetch the CSRF token from the page
      const csrfToken = document.querySelector('input[name="_csrf"]').value;

      // Send a DELETE request to delete the sport
      fetch(`/admin/sports/${sportToDelete.id}`, {
        method: 'DELETE',
        headers: {
          'CSRF-Token': csrfToken,
        },
      })
        .then(response => {
          if (response.ok) {
            // If deletion is successful, update the sports array and display the updated list
            sports.splice(index, 1);
            deleteSchedulesBySport(sportToDelete.name);
            displaySports();
          } else {
            console.error('Failed to delete sport from the server.');
          }
        })
        .catch(error => {
          console.error('Error while deleting sport:', error);
        });
    }

    fetch('/api/sports')
    .then(response => {
      if (!response.ok) {
        throw new Error(`Failed to fetch sports. Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      sports = data;
      displaySports();
    })
    .catch(error => {
      console.error('Error while fetching sports:', error);
    });
    function deleteSchedulesBySport(sportName) {
  // Fetch the CSRF token from the page
  const csrfToken = document.querySelector('input[name="_csrf"]').value;

  // Send a DELETE request to delete schedules associated with the sport
  fetch(`/admin/schedules/${sportName}`, {
    method: 'DELETE',
    headers: {
      'CSRF-Token': csrfToken,
    },
  })
  .then(response => {
    if (response.ok) {
      // Schedules associated with the sport are successfully deleted
      // Update UI or perform any necessary actions
    } else {
      console.error('Failed to delete schedules associated with the sport.');
    }
  })
  .catch(error => {
    console.error('Error while deleting schedules:', error);
  });
}
  </script>

</body>

</html>
